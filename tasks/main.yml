---
- include_vars: arch-{{ ansible_architecture }}.yml

# prerequisites: git package and user
- name: install git
  package: name=git state=present
- name: create service user 
  user: name={{ gogs_user }}

# resolve gogs_version=latest
- name: get latest Gogs release
  local_action:
    module: uri
    url: https://github.com/gogits/gogs/releases/latest
    method: GET
    follow_redirects: true
  register: release_url
  when: gogs_version == 'latest'
- set_fact: __gogs_version={{ release_url.url | basename }}
  when: gogs_version == 'latest'
- set_fact: __gogs_version={{ gogs_version }}
  when: gogs_version != 'latest'

# build Gogs on localhost, if applicable
# assumes Git and Go >= 1.5 are installed and GOROOT/GOPATH are set
- block:
  - include: build.yml
    delegate_to: 127.0.0.1
    vars:
      gogs_goroot: "{{ lookup('env', 'GOROOT') }}"
      gogs_gopath: "{{ lookup('env', 'GOPATH') }}"
  - command: zip -r  -x '*.git*' /tmp/gogs-{{ __gogs_version }}.zip gogs
    delegate_to: 127.0.0.1
    args:
      chdir: "{{ lookup('env', 'GOPATH') }}/src/github.com/gogits"
  when: gogs_install_from_source and gogs_install_via_localhost

# install/update Gogs
- include: from_binary.yml
  when: not gogs_install_from_source or gogs_install_via_localhost
- include: from_source.yml
  when: gogs_install_from_source and not gogs_install_via_localhost
  vars:
    gogs_goroot: "{{ gogs_user_home }}/.local/go"
    gogs_gopath: "{{ gogs_user_home }}/go"
- name: creating Gogs conf directory
  file: path={{ gogs_user_home }}/gogs/custom/conf state=directory owner={{ gogs_user }}
- name: creating Gogs log directory
  file: path={{ gogs_log_dir }} state=directory owner={{ gogs_user }}

# create/update Gogs configuration
- name: generate secret key
  template: src=secret.j2 dest={{ gogs_user_home }}/gogs/custom/conf/secret owner={{ gogs_user }} mode=0600 force=no
- name: read secret key
  slurp: src={{ gogs_user_home }}/gogs/custom/conf/secret
  register: secret_key
- name: configuring Gogs
  template: src=gogs.ini.j2 dest={{ gogs_user_home }}/gogs/custom/conf/app.ini owner={{ gogs_user }} mode=0600
  notify: restart gogs
- name: setup Gogs service (systemd)
  template: src=gogs.service.j2 dest=/etc/systemd/system/gogs.service
  when: ansible_service_mgr == "systemd"
  notify: restart gogs
# make sure systemd loads a new or updated gogs.service file
- name: reload systemd
  systemd: name=gogs enabled=yes daemon_reload=yes
  when: ansible_service_mgr == "systemd"
- name: setup Gogs service (SysV)
  template: src=gogs.init.j2 dest=/etc/init.d/gogs mode=0755
  when: ansible_service_mgr != "systemd"
  notify: restart gogs

- meta: flush_handlers
- wait_for: port={{ gogs_http_port }} delay=5

- name: create Gogs admin account
  command: ./gogs admin create-user --admin --name {{ gogs_admin }} --password {{ gogs_admin_password }} --email {{ gogs_admin_email }}
  args:
    chdir: "{{ gogs_user_home }}/gogs"
    creates: "{{ gogs_repo_dir }}/{{ gogs_admin }}"
  become: yes
  become_user: "{{ gogs_user }}"
